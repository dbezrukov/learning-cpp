#include <iostream>

using namespace std;

/** О ГЕНЕРИРОВАНИИ ИСКЛЮЧЕНИЙ ОТСУТСТВУЮЩИЙ В THROW-СПИСКЕ
    Не разрешается генерировать исключения, отсутствующие в throw-списке
    При возникновении такой ситуации будет вызывана функция unexpected()
    В данной функции можно заместить исключение на своё, как будто оно было изначально.
    Если этого замещенного исключения также не будет в списке, то
    1) если в списке есть bad_exception -выдаст его
    2) вызовет функцию terminate()
*/

/** О НАСЛЕДОВАНИИ ФУНКЦИИ СО THROW-СПИСКОМ
    Можно удалять исключения из списка, но не сам список
    Можно добавлять исключения, являющиеся подклассами уже указанных
*/

class Foo
{
public:
    void bar() throw (bad_alloc)
    {
        /// throw bad_alloc
        int* x = new int[1000000000];
    }
};

int main()
{
    Foo foo;
    try
    {
        foo.bar();
    }
    catch (const bad_alloc& e)
    {
        cout << "can't create object" << endl;
    }
    return 0;
}
